set -e #stops execution if a variable is not set
set -u #stop execution if something goes wrong

#trap "sudo rm -rf  /tmp/BackupsToRestore /data/mysqldata/Xtracmprsbkp*; exit" 0

if [ -f /tmp/BackupsToRestore ];
then
        echo "File /tmp/BackupsToRestore exists, Seems like backup restore is already in Progress"
        exit; exit;
fi

if [ -f /data/mysqldata/Xtracmprsbkp* ];
then
        echo "File like /data/mysqldata/Xtracmprsbkp does already exists, seems like backup restore is already in Progress"
        exit; exit;
fi

Qpress_chk=`rpm -qa | grep -i qpress | wc -l`
if [ $Qpress_chk -eq 0 ];
then
        sudo yum install qpress -y
        if [ $? -ne 0 ];
        then
                exit;exit;exit;
        fi
fi

projtores=$1
hst=`hostname -f`

FBNUM=`mysql -usalt_user -p'saltuser1234' -hipaddress inventory -Bse "select bkp_number from dbbkpstatus where bkp_type='FULL' and status='COMPLETED' and s3_bkp_dir='$projtores' order by WEEK desc,bkp_number desc limit 1"`

FBNTD="FULL$FBNUM";

WKNUM=`mysql -usalt_user -p'saltuser1234' -hipaddress inventory -Bse "select WEEK from dbbkpstatus where bkp_type='FULL' and status='COMPLETED' and s3_bkp_dir='$projtores' order by WEEK desc,bkp_number desc limit 1"`

BKPSER=`mysql -usalt_user -p'saltuser1234' -hipaddress inventory -Bse "select ip_address from dbbkpstatus where bkp_type='FULL' and status='COMPLETED' and s3_bkp_dir='$projtores' order by WEEK desc,bkp_number desc limit 1"`

mysql -usalt_user -p'saltuser1234' -hipaddress inventory -Bse "select local_bkp from dbbkpstatus where bkp_type='FULL' and bkp_number=$FBNUM and WEEK=$WKNUM and s3_bkp_dir='$projtores' and ip_address='$BKPSER'" > /tmp/BackupsToRestore

mysql -usalt_user -p'saltuser1234' -hipaddress inventory -Bse "select local_bkp from dbbkpstatus where bkp_type='DIFFERENTIAL' and status='COMPLETED' and ref_full_bkp='$FBNTD' and WEEK=$WKNUM and s3_bkp_dir='$projtores' and ip_address='$BKPSER' order by bkp_number desc limit 1" >> /tmp/BackupsToRestore


for BTD in `cat /tmp/BackupsToRestore`;
do
	scp -r dba@$BKPSER:$BTD /data/mysqldata/
        BNTD=`echo $BTD | rev | cut -f1 -d'/' | rev`;
        #sudo mkdir /data/mysqldata/$BNTD;
        #sudo chown dba:dba /data/mysqldata/$BNTD;
        #sudo chmod 775 /data/mysqldata/$BNTD;

        #aws s3 cp $BTD /data/mysqldata/$BNTD/ --recursive --quiet;
        for bf in `find /data/mysqldata/$BNTD/ -iname "*\.qp"`; do qpress -d $bf $(dirname $bf) && rm -f $bf; done
done

if [[ `cat /tmp/BackupsToRestore | grep '_DIFF' | wc -l` == 0 ]]
then
        FULLBKPDIR=`cat /tmp/BackupsToRestore | rev | cut -f1 -d'/' | rev`
        innobackupex --apply-log /data/mysqldata/$FULLBKPDIR
        sudo rm -rf /data/mysqldata/mysql
        sudo mv /data/mysqldata/$FULLBKPDIR /data/mysqldata/mysql
        sudo chown -R mysql:mysql /data/mysqldata/mysql
        sudo chmod -R 775 /data/mysqldata/mysql

elif [[ `cat /tmp/BackupsToRestore | grep '_DIFF' | wc -l` == 1 ]]
then
        FULLBKPDIR=`cat /tmp/BackupsToRestore | grep '_FULL' | grep -v '_DIFF' | rev | cut -f1 -d'/' | rev`
        innobackupex --apply-log --redo-only /data/mysqldata/$FULLBKPDIR/
        BN=`cat /tmp/BackupsToRestore | grep "_DIFF"| rev | cut -f1 -d'/' | rev`;
        innobackupex --apply-log /data/mysqldata/$FULLBKPDIR --incremental-dir=/data/mysqldata/$BN
        innobackupex --apply-log /data/mysqldata/$FULLBKPDIR
        sudo rm -rf /data/mysqldata/mysql
        sudo mv /data/mysqldata/$FULLBKPDIR /data/mysqldata/mysql
        sudo chown -R mysql:mysql /data/mysqldata/mysql
        sudo chmod -R 775 /data/mysqldata/mysql
fi

rm -rf /tmp/BackupsToRestore
